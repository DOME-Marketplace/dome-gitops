global:
  domain: "wallet.dome-marketplace-sbx.org"
  ingress:
    enabled: true
    className: "nginx"
    labels: {}
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    enableTLS: true
    clusterIssuer: "letsencrypt-sbx-issuer"
    secondary:
      enabled: true
      domain: "wallet.example-secondary-domain.org"


dome-wallet:

  ## configuration for the wallet-backend
  dome-wallet-backend:
    fullNameOverride: "dome-wallet-backend"
    image:
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.4.6
      pullPolicy: Always
    ## deployment specific configuration
    app:
      logLevel: INFO
      authServer:
        externalUrl: https://keycloak.dome-marketplace-sbx.org/realms/dome-wallet
        internalUrl: http://keycloak:80/realms/dome-wallet
      cors:
        allowedOrigins: "https://wallet.dome-marketplace-sbx.org, wallet.example-secondary-domain.org"
      vault:
        provider: hashicorp
        # host needs to match with the service name of the vault server
        url: http://wallet-vault-server:8200
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          # -- name of the secret
          name: wallet-vault-unseal-secret
          # -- key to retrieve the token from
          key: root
      ebsiTest:
        url: http://keycloak:80/realms/dome-wallet/protocol/openid-connect/token
        client:
          id: user-registry-client
          existingSecret:
            # -- should an existing secret be used
            enabled: true
            # -- name of the secret
            name: wallet-secret
            # -- key to retrieve the password from
            key: client-secret
        userData:
          name: admin
          existingSecret:
            # -- should an existing secret be used
            enabled: true
            # -- name of the secret
            name: wallet-secret
            # -- key to retrieve the password from
            key: user-password
      db:
        schema: wallet
        host: wallet-postgres
        port: 5432
        name: wallet
        username: postgres
        password: postgres
        existingSecret:
          enabled: true
          name: wallet-secret
          key: db-password

  ## configuration for the dome-wallet-ui
  dome-wallet-frontend:
    fullNameOverride: "dome-wallet-frontend"
    image:
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.9.1
    ## deployment specific configuration
    app:
      logsEnabled: true
      colors:
        primary: "#00ADD3"
        primaryContrast: "#ffffff"
        secondary: "#50c8ff"
        secondaryContrast: "#000000"
      logoSrc: "assets/logos/dome-logo.png"
      faviconSrc: "assets/icons/dome-favicon.png"
      walletApi:
        # Este internalDomain es en realidad el external
        internalUrl: https://wallet.dome-marketplace-sbx.org
        # ws = sin certificado, wss = con certificado
        websocketExternalUrl: wss://wallet.dome-marketplace-sbx.org
      iam:
        externalUrl: https://keycloak.dome-marketplace-sbx.org/realms/dome-wallet

  ## configuration for the dome-wallet-keycloak
  dome-wallet-keycloak:
    image:
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0.2
    # -- should be enabled?
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    fullnameOverride: dome-wallet-keycloak
    nameOverride: dome-wallet-keycloak
    # -- Added because the rollout is not working
    readinessProbe:
      httpGet:
        path: /health
    # -- Added because the rollout is not working
    livenessProbe:
      httpGet:
        path: /health
    ## ingress specific configuration
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-sbx-issuer"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts:
        - host: wallet.dome-marketplace-sbx.org
          paths:
            - path: /keycloak(/|$)(.*)
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - wallet.dome-marketplace-sbx.org
          secretName: wallet-tls-secret
    ## deployment specific configuration
    app:
      keycloak:
        hostnameUrl: "https://wallet.dome-marketplace-sbx.org/keycloak"
        adminUrl: "https://wallet.dome-marketplace-sbx.org/keycloak"
        admin: admin
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          # -- name of the secret
          name: wallet-secret
          # -- key to retrieve the password from
          key: keycloak-password
      db:
        type: postgres
        host: dome-wallet-keycloak-postgres
        port: 5432
        name: keycloak
        username: postgres
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          # -- name of the secret
          name: wallet-secret
          # -- key to retrieve the password from
          key: keycloak-db-password

  ## configuration of postgres to be used for the blockchain-connector - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
  dome-wallet-keycloak-postgresql:
    # -- should the postgresql deployment be enabled
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    fullnameOverride: dome-wallet-keycloak-postgres
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    nameOverride: dome-wallet-keycloak-postgres
    ## auth configuration for the database
    auth:
      # -- username to be used
      username: postgres
      # -- password to be used
      password: postgres
      # -- should the default postgres user be enabled
      enablePostgresUser: true
      # -- existing secret
      existingSecret: wallet-secret
      secretKeys:
        adminPasswordKey: keycloak-db-password
        userPasswordKey: keycloak-db-password
    ## configuration of the postgres primary replica
    primary:
      ## provide db initialization
      initdb:
        ## provide scripts for initialization
        scripts:
          # -- create the database as expected by the blockchain-connector
          create.sh: |
            psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE keycloak;"

  ## configuration of postgres
  dome-wallet-postgresql:
    # -- should the postgresql deployment be enabled
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    fullnameOverride: wallet-postgres
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    # ! Changing this parameter may cause the PVC to be re-created and the data lost
    nameOverride: wallet-postgres
    auth:
      # -- username to be used
      username: postgres
      # -- should the default postgres user be enabled
      enablePostgresUser: true
      # -- password to be used
      existingSecret: wallet-secret
      secretKeys:
        adminPasswordKey: db-password
        userPasswordKey: db-password