kind: ConfigMap
apiVersion: v1
metadata:
  name: keyrock-create-policy-cm
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "1"
data:
  create.sh: |-
    mysql -h {{ .Values.keyrock.db.host }} -u {{ .Values.keyrock.db.user }} -p$DB_PASSWORD {{ .Values.initScript.rolePolicy.dbName }} <<EOF

    {{ if .Values.initScript.rolePolicy.policyEnabled -}}

    -- Static objects
    SET @rules := JSON_ARRAY(
      JSON_OBJECT(
        "effect", "Permit"
      )
    );

    SET @subjectSeller := "seller";
    SET @subjectCostumer := "costumer";

    -- Policies seller
    SET @policiesSeller := JSON_ARRAY(
      JSON_OBJECT(
        "rules", CAST(@rules as JSON),
        "target", JSON_OBJECT(
          "actions", JSON_ARRAY("GET","POST","PATCH","DELETE"),
          "resource", JSON_OBJECT(
            "type", "PATH",
            "identifiers", JSON_ARRAY("/catalog")
          )
        )
      )
    );

    -- Policies customer
    SET @policiesCostumer := JSON_ARRAY(
      JSON_OBJECT(
        "rules", CAST(@rules as JSON),
        "target", JSON_OBJECT(
          "actions", JSON_ARRAY("GET"),
          "resource", JSON_OBJECT(
            "type", "PATH",
            "identifiers", JSON_ARRAY("/catalog")
          )
        )
      )
    );

    -- Insert Delegation Evidence Seller VC
    SET @delegationSellerVC := JSON_OBJECT(
      "target", JSON_OBJECT(
        "accessSubject", @subjectSeller
      ),
      "notBefore", {{ .Values.initScript.rolePolicy.notBefore }},
      "notOnOrAfter", {{ .Values.initScript.rolePolicy.notOnOrAfter }},
      "policyIssuer", {{ .Values.initScript.rolePolicy.issuerDid | quote }},
      "policySets", JSON_ARRAY(
        JSON_OBJECT(
          "target", JSON_OBJECT(
            "environment", JSON_OBJECT(
              "licenses", JSON_ARRAY("ISHARE.0001")
            )
          ),
          "policies", CAST(@policiesSeller as JSON)
        )
      )
    );
    INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ({{ .Values.initScript.rolePolicy.issuerDid | quote }}, @subjectSeller, @delegationSellerVC);

    -- Insert Delegation Evidence Customer VC
    SET @delegationCustomerVC := JSON_OBJECT(
      "target", JSON_OBJECT(
        "accessSubject", @subjectCustomer
      ),
      "notBefore", {{ .Values.initScript.rolePolicy.notBefore }},
      "notOnOrAfter", {{ .Values.initScript.rolePolicy.notOnOrAfter }},
      "policyIssuer", {{ .Values.initScript.rolePolicy.issuerDid | quote }},
      "policySets", JSON_ARRAY(
        JSON_OBJECT(
          "target", JSON_OBJECT(
            "environment", JSON_OBJECT(
              "licenses", JSON_ARRAY("ISHARE.0001")
            )
          ),
          "policies", CAST(@policiesCustomer as JSON)
        )
      )
    );
    INSERT IGNORE INTO delegation_evidence (policy_issuer, access_subject,policy) VALUES ({{ .Values.initScript.rolePolicy.issuerDid | quote }}, @subjectCostumer, @delegationCustomerVC);

    {{- end }}

    COMMIT;
    EOF
