apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  labels:
    app.kubernetes.io/instance: bacula-dir
    app.kubernetes.io/name: bacula-dir
    argocd.argoproj.io/instance: bacula
  name: bacula-dir
  namespace: bacula
spec:
  replicas: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app.kubernetes.io/instance: bacula-dir
      app.kubernetes.io/name: bacula-dir
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: bacula-dir
        app.kubernetes.io/name: bacula-dir
    spec:
      containers:
        - name: bacula-dir
          image: 'fametec/bacula-director:11.0.5'
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              value: "bacula-db" # Service name of the PostgreSQL deployment
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "bacula"
            - name: DB_USER
              value: "bacula"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bacula-db-secret
                  key: password
          ports:
            - containerPort: 9101
              name: bacula-dir
              protocol: TCP
          resources: {}
          readinessProbe:
            tcpSocket:
              port: 9101
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9101
            initialDelaySeconds: 30
            periodSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      terminationGracePeriodSeconds: 30
