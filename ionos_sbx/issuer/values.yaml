issuer:
  issuer-api:
    ingress:
      enabled: true
      className: nginx
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-api
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: ingress-nginx-admission
    app:
      profile: default
      logLevel: DEBUG
      internalServerPort: 8080
      mail:
        host: smtp.ionos.de
        port: 587
        existingSecret:
          enabled: true
          name: issuer-api-mail-secret
          userKey: username
          passwordKey: password
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
              ssl:
                trust: smtp.ionos.de
      api:
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30001
          path: /issuer-api
        internalDomain: http://issuer-api:8080
        configSource: yaml
        cacheLifetimeCredentialOffer: 10
        cacheLifetimeVerifiableCredential: 10
      authServer:
        provider: keycloak
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
        internalDomain: http://issuer-keycloak:8080
        realm: CredentialIssuer
        client:
          clientId: oidc4vci-wallet-client
          clientSecret: oidc4vci-wallet-client-secret
          username: user
          password: user
          existingSecret:
            enabled: false
            name: auth-secret
            clientSecretKey: authServerClientSecret
            clientPasswordKey: authServerClientPassword
        paths:
          tokenPath: /realms/CredentialIssuer/protocol/openid-connect/token
      ui:
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30000
          path: /
        internalDomain: http://wallet-ui:8080
    db:
      host: issuer-postgres
      port: 5432
      externalService: false
      name: issuer
      username: postgres
      password: postgres
      existingSecret:
        enabled: false
        name: db-secret
        key: db-password

  issuer-ui:
    image:
      repository: in2workspace/issuer-ui
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0.0
      pullPolicy: Always
    ingress:
      enabled: true
      className: nginx
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: ingress-nginx-admission
    app:
      internalServerPort: 8080
      loginUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30002
        path: /issuer-keycloak/realms/CredentialIssuer
      clientId: account-console
      scope: openid profile email offline_access
      grantType: code
      baseUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30001
        path: /issuer-api
      walletUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30003
        path: /wallet-ui
      procedures: /api/v1/procedures
      saveCredential: /api/v1/credentials?type=LEARCredentialEmployee
      credentialOfferUrl: /api/v1/credential-offer
      notification: /api/v1/notifications

  dome-issuer-keycloak:
    readinessProbe:
      path: /issuer-keycloak/health
    livenessProbe:
      path: /issuer-keycloak/health
    ingress:
      enabled: true
      className: nginx
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-keycloak
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: ingress-nginx-admission
    # Keycloak Configuration
    keycloak:
      proxy: edge
      logsCertsLevel: TRACE
      logLevel: ALL
      admin:
        username: admin
        password: admin
        existingSecret:
          enabled: false
          name: keycloak-secrets
          passwordKey: keycloakAdminPassword
      relativePath: "/issuer-keycloak/"
      hostname:
        url:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
        adminUrl:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
      https:
        certificateKeyFile: /opt/keycloak/pem/server.key.pem
        certificateFile: /opt/keycloak/pem/server.crt.pem
        trustStoreFile: /opt/keycloak/truststore/truststore.jks
        trustStorePassword: pempas
        existingSecret:
          enabled: false
          name: keycloak-secrets
          trustStorePasswordKey: keycloakTrustStorePassword
        clientAuth: request
      db:
        type: postgres
        username: postgres
        url: jdbc:postgresql://issuer-keycloak-postgres/cred
        port: 5432
        password: postgres
        existingSecret:
          enabled: false
          name: keycloak-secrets
          passwordKey: keycloakDbPassword

    # Issuer API Configuration
    issuerApi:
      url: http://issuer-api:8080
      externalUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30001
        path: /issuer-api

    # Pre-authorization Configuration
    preAuth:
      lifespan: 10
      lifespanTimeUnit: MINUTES

    # Transaction Code Configuration
    txCode:
      size: 4
      description: Enter the PIN code

    # Token Configuration
    token:
      expiration: 2592000

  issuer-postgres:
      # -- should the postgresql deployment be enabled
      enabled: true
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      fullnameOverride: issuer-postgres
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      nameOverride: issuer-postgres
      ## auth configuration for the database
      auth:
        # -- username to be used
        username: postgres
        # -- should the default postgres user be enabled
        enablePostgresUser: true
        # -- password to be used
        password: postgres
      ## configuration of the postgres primary replica
      primary:
        ## provide db initialization
        initdb:
          ## provide scripts for initialization
          scripts:
            # -- create the database
            create.sh: |
              psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE issuer;"


  issuer-keycloak-postgres:
      # -- should the postgresql deployment be enabled
      enabled: true
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      fullnameOverride: issuer-keycloak-postgres
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      nameOverride: issuer-keycloak-postgres
      ## auth configuration for the database
      auth:
        # -- username to be used
        username: postgres
        # -- should the default postgres user be enabled
        enablePostgresUser: true
        # -- password to be used
        password: postgres
      ## configuration of the postgres primary replica
      primary:
        ## provide db initialization
        initdb:
          ## provide scripts for initialization
          scripts:
            # -- create the database
            create.sh: |
              psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE cred;"