issuer:
  issuer-api:
    fullnameOverride: issuer-api
    nameOverride: issuer-api
    image:
      repository: in2workspace/in2-issuer-api
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.2.5
      pullPolicy: Always
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-sbx-issuer
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-api
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: issuer-secret-tls
    ingressWellKnown:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-sbx-issuer
        nginx.ingress.kubernetes.io/rewrite-target: /issuer-keycloak/realms/issuer-dome/verifiable-credential/did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa/.well-known/openid-configuration
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-api/.well-known/openid-configuration
              pathType: Prefix
              serviceName: dome-issuer-keycloak
              servicePort: 8080
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: issuer-secret-tls
    ingressToken:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-sbx-issuer
        nginx.ingress.kubernetes.io/rewrite-target: /issuer-keycloak/realms/issuer-dome/verifiable-credential/did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa/token
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-api/token
              pathType: Prefix
              serviceName: dome-issuer-keycloak
              servicePort: 8080
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: issuer-secret-tls
    app:
      profile: dev
      logLevel:
        app: INFO
        security: INFO
      internalServerPort: 8080
      mail:
        host: smtp.ionos.de
        port: 587
        existingSecret:
          enabled: true
          name: issuer-secret
          userKey: username
          passwordKey: password
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
              ssl:
                trust: smtp.ionos.de
      remoteSignature:
        existingSecret:
          enabled: true
          name: issuer-secret
          clientId: client-id
          clientSecret: client-secret
          credentialId: credential-id
          credentialPassword: credential-password
        domain:
          scheme: http
          # change by the external url or set to localhost if deployed locally
          host: dome-dss:8080
      api:
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30001
          path: /issuer-api
        internalDomain: http://issuer-api:8080
        configSource: yaml
        cacheLifetimeCredentialOffer: 10
        cacheLifetimeVerifiableCredential: 10
      authServer:
        provider: keycloak
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
        internalDomain: http://dome-issuer-keycloak:8080/issuer-keycloak
        realm: issuer-dome
        client:
          clientId: issuer-api-client
          username: issuer-api-user
          existingSecret:
            enabled: true
            name: issuer-secret
            clientSecretKey: authServerClientSecret
            clientPasswordKey: issuer-api-user-password
        paths:
          tokenPath: /realms/issuer-dome/protocol/openid-connect/token
      ui:
        externalDomain:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30000
          path: /
        internalDomain: http://dome-wallet-ui:8080
      wallet:
        url: https://wallet.dome-marketplace.org/
      knowledgebase:
        walletUrl: "https://knowledgebase.dome-marketplace-sbx.org/books/dome-digital-wallet-user-guide"
      trustFramework:
        url: "http://trusted-issuers-list.marketplace.svc.cluster.local:8080"
      defaultSigner:
        existingSecret:
          enabled: true
          name: issuer-secret
          commonName: common-name
          country: country
          email: email
          organizationIdentifier: organization-identifier
          organization: organization
          serialNumber: serial-number
      issuerIdentity:
        existingSecret:
          enabled: true
          name: issuer-secret
          vc: vc
          cryptoPrivateKey: private-key
          credentialDidKey: did-key
      cors:
        default:
          allowedOrigins: "https://issuer.dome-marketplace-sbx.org"
        external:
          allowedOrigins: "https://issuer.dome-marketplace-sbx.org, https://dome-certification.dome-marketplace-sbx.org"
    db:
      host: issuer-postgres
      port: 5432
      externalService: false
      name: issuer
      username: postgres
      existingSecret:
        enabled: true
        name: issuer-secret
        key: db-password

  issuer-ui:
    fullnameOverride: issuer-ui
    nameOverride: issuer-ui
    image:
      repository: in2workspace/in2-issuer-ui
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.7.1
      pullPolicy: Always
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-sbx-issuer
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: issuer-secret-tls
    app:
      internalServerPort: 8080
      loginUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30002
        path: /issuer-keycloak/realms/issuer-dome
      clientId: vc-auth-client
      scope: openid profile email offline_access vc mandator
      grantType: code
      baseUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30001
        path: /issuer-api
      walletUrlTest:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: wallet.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30003
        path: /
      colors:
        primary: "#2d58a7"
        primaryContrast: "#ffffff"
        secondary: "#2cb6b2"
        secondaryContrast: "#dde6f6"
      logoSrc: "assets/logos/logo-dome-issuer-reduced.png"
      faviconSrc: "assets/icon/favicon.png"
      walletUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: wallet.dome-marketplace.org
        # internalPort is only used if externalService is false
        internalPort: 30003
        path: /
      knowledgebaseUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: knowledgebase.dome-marketplace-sbx.org
        path: /
        walletPath: "books/dome-digital-wallet-user-guide"
      profile: sbx
      procedures: /api/v1/procedures
      saveCredential: /api/v1/credentials?type=LEARCredentialEmployee
      credentialOfferUrl: /api/v1/credential-offer
      notification: /api/v1/notifications

  dome-issuer-keycloak:
    fullnameOverride: dome-issuer-keycloak
    nameOverride: dome-issuer-keycloak
    image:
      repository: in2workspace/dome-issuer-keycloak
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0.3
    readinessProbe:
      path: /issuer-keycloak/health
    livenessProbe:
      path: /issuer-keycloak/health
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-sbx-issuer
      hosts:
        - host: issuer.dome-marketplace-sbx.org
          paths:
            - path: /issuer-keycloak
              pathType: Prefix
      tls:
        - hosts:
            - issuer.dome-marketplace-sbx.org
          secretName: issuer-secret-tls
    # Keycloak Configuration
    keycloak:
      proxy: edge
      logsCertsLevel: DEBUG
      logLevel: DEBUG
      admin:
        username: admin
        existingSecret:
          enabled: true
          name: issuer-secret
          passwordKey: keycloak-admin-password
      relativePath: "/issuer-keycloak/"
      hostname:
        url:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
        adminUrl:
          # if deployed locally set to false
          externalService: true
          scheme: https
          # change by the external url or set to localhost if deployed locally
          host: issuer.dome-marketplace-sbx.org
          # internalPort is only used if externalService is false
          internalPort: 30002
          path: /issuer-keycloak
      https:
        certificateKeyFile: /opt/keycloak/pem/server.key.pem
        certificateFile: /opt/keycloak/pem/server.crt.pem
        trustStoreFile: /opt/keycloak/truststore/truststore.jks
        existingSecret:
          enabled: true
          name: issuer-secret
          trustStorePasswordKey: keycloakTrustStorePassword
        clientAuth: request
      db:
        host: dome-issuer-keycloak-postgres
        port: 5432
        externalService: false
        name: cred
        username: postgres
        existingSecret:
          enabled: true
          name: issuer-secret
          passwordKey: keycloak-db-password

    # Issuer API Configuration
    issuerApi:
      url: http://issuer-api:8080/issuer-api
      externalUrl:
        # if deployed locally set to false
        externalService: true
        scheme: https
        # change by the external url or set to localhost if deployed locally
        host: issuer.dome-marketplace-sbx.org
        # internalPort is only used if externalService is false
        internalPort: 30001
        path: /issuer-api

    # Pre-authorization Configuration
    preAuth:
      lifespan: 10
      lifespanTimeUnit: MINUTES

    # Token Configuration
    token:
      expiration: "2592000"

  issuer-postgres:
      # -- should the postgresql deployment be enabled
      enabled: true
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      fullnameOverride: issuer-postgres
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      nameOverride: issuer-postgres
      ## auth configuration for the database
      auth:
        # -- username to be used
        username: postgres
        # -- should the default postgres user be enabled
        enablePostgresUser: true
        # -- password to be used
        existingSecret: issuer-secret
        secretKeys:
          adminPasswordKey: db-password
          userPasswordKey: db-password
      ## configuration of the postgres primary replica
      primary:
        ## provide db initialization
        initdb:
          ## provide scripts for initialization
          scripts:
            # -- create the database
            create.sh: |
              psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE issuer;"


  issuer-keycloak-postgres:
      # -- should the postgresql deployment be enabled
      enabled: true
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      fullnameOverride: dome-issuer-keycloak-postgres
      # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
      nameOverride: dome-issuer-keycloak-postgres
      ## auth configuration for the database
      auth:
        # -- username to be used
        username: postgres
        # -- should the default postgres user be enabled
        enablePostgresUser: true
        existingSecret: issuer-secret
        secretKeys:
          adminPasswordKey: keycloak-db-password
          userPasswordKey: keycloak-db-password
      ## configuration of the postgres primary replica
      primary:
        ## provide db initialization
        initdb:
          ## provide scripts for initialization
          scripts:
            # -- create the database
            create.sh: |
              psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE cred;"