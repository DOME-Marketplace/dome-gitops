## configuration for the wallet-api
wallet-api:
  # -- should be enabled?
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: wallet-api
  ## deployment specific configuration
  app:
    internalServerPort: 8080
    logLevel: DEBUG
    walletUi:
      scheme: https
      domain: wallet.dome-marketplace-sbx.org
    authServer:
      external:
        scheme: https
        domain: wallet.dome-marketplace-sbx.org
        port: 443
        path: /keycloak/realms/wallet
      internal:
        scheme: http
        domain: wallet-keycloak
        port: 8080
        path: /realms/wallet
      jwtDecoderPath: /protocol/openid-connect/certs
    ebsiTest:
      url: http://wallet-keycloak:8080/realms/wallet/protocol/openid-connect/token
      client:
        id: user-registry-client
        secret: defaultSecret
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          # -- name of the secret
          name: wallet-api-client-secret
          # -- key to retrieve the password from
          key: client-secret
      userData:
        name: admin
        password: defaultPassword
        existingSecret:
          # -- should an existing secret be used
          enabled: true
          # -- name of the secret
          name: wallet-api-user-password
          # -- key to retrieve the password from
          key: user-password
    vault:
      provider: hashicorp
      host: vault
      scheme: http
      port: 8200
      token: defaultToken
      existingSecret:
        # -- should an existing secret be used
        enabled: false
        # -- name of the secret
        name: wallet-api-token-secret
        # -- key to retrieve the token from
        key: token
    broker:
      provider: scorpio
      internal:
        scheme: http
        domain: scorpio
        port: 9090
      pathsEntities: /ngsi-ld/v1/entities

## configuration for the dome-wallet-ui
dome-wallet-ui:
  # -- should be enabled?
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: wallet-identity-provider
  ## deployment specific configuration
  app:
    internalServerPort: 8080
    walletApi:
      internalDomain: https://wallet.dome-marketplace-sbx.org/wallet-api
      websocketExternalDomain: wss://wallet.dome-marketplace-sbx.org/wallet-api
      websocketPath: /api/v1/pin
      executeContentPath: /api/v1/execute-content
      requestCredentialPath: /api/v1/request-credential
      verifiablePresentationPath: /api/v1/vp
      credentialsPath: /api/v1/credentials
      credentialsByIdPath: /api/v1/credentials?credentialId=
      requestSignedCredentialPath: /api/v1/request-signed-credential
      cborPath: /api/v1/vp/cbor
    iam:
      external_domain: https://wallet.dome-marketplace-sbx.org/keycloak
      realm_path: /realms/wallet

## configuration for the dome-wallet-keycloak
dome-wallet-keycloak:
  # -- should be enabled?
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: dome-wallet-keycloak
  ## deployment specific configuration
  app:
    internalServerPort: 8080
    keycloak:
      admin: admin
      password: admin
      existingSecret:
        # -- should an existing secret be used
        enabled: true
        # -- name of the secret
        name: dome-wallet-keycloak-secret
        # -- key to retrieve the password from
        key: keycloak-password
  db:
    name: postgres
    url: jdbc:postgresql://wallet-keycloak-postgres/keycloak
    port: 5432
    username: postgres
    password: postgres
    existingSecret:
      # -- should an existing secret be used
      enabled: true
      # -- name of the secret
      name: dome-wallet-keycloak-db-secret
      # -- key to retrieve the password from
      key: keycloak-db-password

## configuration of postgres to be used for the blockchain-connector - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
postgresql:
  # -- should the postgresql deployment be enabled
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: postgresql-connector
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  nameOverride: postgresql-connector
  ## auth configuration for the database
  auth:
    # -- username to be used
    username: postgres
    # -- should the default postgres user be enabled
    enablePostgresUser: true
    # -- existing secret
    existingSecret: wallet-postgres-secret
  ## configuration of the postgres primary replica
  primary:
    ## provide db initialization
    initdb:
      ## provide scripts for initialization
      scripts:
        # -- create the database as expected by the blockchain-connector
        create.sh: |
          psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE mktdb;"
          
## configuration of the context-broker - see https://github.com/FIWARE/helm-charts/tree/main/charts/scorpio-broker-aaio for details
scorpio:
  # -- should scorpio be enabled
  enabled: true
  ## configuration of the image to be used
  image:
    # -- repository to be used - resource friendly all-in-one-runner without kafka
    repository: scorpiobroker/all-in-one-runner
    # -- tag of the image to be used - latest java image without kafka
    tag: java-4.1.11
  ## configuration of the database to be used by broker
  db:
    # -- host of the db
    dbhost: postgis
    # -- username to be used
    user: postgres
    existingSecret:
      # -- should an existing secret be used
      enabled: true
      # -- name of the secret
      name: wallet-scorpio-secret
      # -- key to retrieve the password from
      key: passwordKey
  ## configuration of the readiness probe
  readinessProbe:
    # -- path to be used for the readiness probe, older versions used /actuator/health
    path: /q/health
  ## configuration of the liveness probe
  livenessProbe:
    # -- path to be used for the readiness probe, older versions used /actuator/health
    path: /q/health
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: scorpio
  ## configuration to be used for the service offered by scorpio
  service:
    # -- ClusterIP is the recommended type for most clusters
    type: ClusterIP

## configuration of postgis to be used for scorpio - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
postgis:
  # -- should postgis be enabled
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: postgis
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  nameOverride: postgis
  ## auth configuration for the database
  auth:
    # -- username to be used
    username: postgres
    # -- should the default postgres user be enabled
    enablePostgresUser: true
    # -- existing secret
    existingSecret: wallet-postgis-secret
  ## configuration of the postgres primary replicas
  primary:
    ## provide db initialization
    initdb:
      ## provide scripts for initialization
      scripts:
        # -- enable the postgis extension and create the database as expected by scorpio
        enable.sh: |
          psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE EXTENSION postgis;"
          psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE ngb;"
